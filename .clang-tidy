---
# for list and description of all clang-tidy10 checks see https://releases.llvm.org/10.0.0/tools/clang/tools/extra/docs/clang-tidy/checks/list.html

Checks:  '-*,
         clang-analyzer-core.uninitialized.*,
         bugprone-assert-side-effect,
         bugprone-bad-signal-to-kill-thread,
         bugprone-branch-clone,
         bugprone-copy-constructor-init,
         bugprone-dangling-handle,
         bugprone-dynamic-static-initializers,
         bugprone-exception-escape,
         bugprone-fold-init-type,
         bugprone-forward-declaration-namespace,
         bugprone-forwarding-reference-overload,
         bugprone-inaccurate-erase,
         bugprone-incorrect-roundings,
         bugprone-infinite-loop,
         bugprone-integer-division,
         bugprone-lambda-function-name,
         bugprone-macro-parentheses,
         bugprone-macro-repeated-side-effects,
         bugprone-misplaced-operator-in-strlen-in-alloc,
         bugprone-misplaced-pointer-arithmetic-in-alloc,
         bugprone-misplaced-widening-cast,
         bugprone-move-forwarding-reference,
         bugprone-multiple-statement-macro,
         bugprone-not-null-terminated-result,
         bugprone-parent-virtual-call,
         bugprone-posix-return,
         bugprone-reserved-identifier,
         bugprone-signed-char-misuse,
         bugprone-sizeof-container,
         bugprone-sizeof-expression,
         bugprone-spuriously-wake-up-functions,
         bugprone-string-constructor,
         bugprone-string-integer-assignment,
         bugprone-string-literal-with-embedded-nul,
         bugprone-suspicious-enum-usage,
         bugprone-suspicious-include,
         bugprone-suspicious-memset-usage,
         bugprone-suspicious-missing-comma,
         bugprone-suspicious-semicolon,
         bugprone-suspicious-string-compare,
         bugprone-swapped-arguments,
         bugprone-terminating-continue,
         bugprone-throw-keyword-missing,
         bugprone-too-small-loop-variable,
         bugprone-undefined-memory-manipulation,
         bugprone-undelegated-constructor,
         bugprone-unhandled-self-assignment,
         bugprone-unused-raii,
         bugprone-unused-return-value,
         bugprone-use-after-move,
         bugprone-virtual-near-miss,
         google-build-using-namespace, 
         google-readability-casting,
         misc-misplaced-const,
         misc-redundant-expression,
         misc-static-assert,
         misc-unconventional-assign-operator,
         misc-uniqueptr-reset-release,
         misc-unused-parameters,
         modernize-avoid-bind,
         modernize-avoid-c-arrays,
         modernize-concat-nested-namespaces,
         modernize-deprecated-ios-base-aliases,
         modernize-loop-convert,
         modernize-make-shared,
         modernize-make-unique,
         modernize-pass-by-value,
         modernize-raw-string-literal,
         modernize-redundant-void-arg.
         modernize-replace-auto-ptr,
         modernize-replace-disallow-copy-and-assign-macro,
         modernize-replace-random-shuffle,
         modernize-return-braced-init-list,
         modernize-shrink-to-fit,
         modernize-unary-static-assert,
         modernize-use-bool-literals,
         modernize-use-default-member-init,
         modernize-use-emplace,
         modernize-use-equals-default,
         modernize-use-equals-delete,
         modernize-use-noexcept,
         modernize-use-nullptr,
         modernize-use-override,
         modernize-use-uncaught-exceptions,
         modernize-use-using,
         performance-*,
         readability-braces-around-statements,
         readability-const-return-type,
         readability-container-size-empty,
         readability-convert-member-functions-to-static,
         readability-delete-null-pointer,
         readability-deleted-default,
         readability-else-after-return,
         readability-function-size,
         readability-identifier-naming,
         readability-implicit-bool-conversion,
         readability-inconsistent-declaration-parameter-name,
         readability-isolate-declaration,
         # readability-magic-numbers,
         readability-make-member-function-const,
         readability-misleading-indentation,
         readability-misplaced-array-index,
         readability-named-parameter,
         readability-non-const-parameter,
         readability-redundant-access-specifiers,
         readability-redundant-control-flow,
         readability-redundant-declaration,
         readability-redundant-function-ptr-dereference,
         readability-redundant-preprocessor,
         readability-redundant-smartptr-get,
         readability-redundant-string-cstr,
         readability-redundant-string-init,
         readability-simplify-boolean-expr,
         readability-simplify-subscript-expr,
         readability-static-accessed-through-instance,
         readability-static-definition-in-anonymous-namespace,
         readability-string-compare,
         readability-uniqueptr-delete-release,
         readability-use-anyofallof'

#WarningsAsErrors: '*'

CheckOptions:
   - { key: readability-function-size.StatementThreshold, value: 1600 }
   - { key: readability-function-size.NestingThreshold, value: 12 }

   - { key: readability-identifier-naming.FunctionCase, value: camelBack }
   - { key: readability-identifier-naming.MethodCase, value: camelBack }
   - { key: readability-identifier-naming.ClassMethodCase, value: camelBack }
   
   - { key: readability-identifier-naming.ClassCase, value: CamelCase }
   - { key: readability-identifier-naming.StructCase, value: CamelCase }
   - { key: readability-identifier-naming.EnumCase, value: CamelCase }

   - { key: readability-identifier-naming.GlobalConstantCase, value: CamelCase }
   - { key: readability-identifier-naming.EnumConstantCase, value: CamelCase }
   - { key: readability-identifier-naming.StaticConstantCase, value: CamelCase }

   - { key: readability-identifier-naming.GlobalVariableCase, value: camelBack }
   - { key: readability-identifier-naming.StaticVariableCase, value: camelBack }

   - { key: readability-identifier-naming.MemberCase, value: camelBack }
   - { key: readability-identifier-naming.PrivateMemberSuffix, value: _ }
   - { key: readability-identifier-naming.ProtectedMemberSuffix, value: _ }

   - { key: readability-identifier-naming.NamespaceCase, value: lower_case }
   - { key: readability-identifier-naming.LocalVariableCase, value: camelBack }
   - { key: readability-identifier-naming.ParameterCase, value: camelBack }

   - { key: readability-inconsistent-declaration-parameter-name.Strict, value: 1 }

...

# removed checks
        #bugprone-argument-comment,
        #bugprone-bool-pointer-implicit-conversion,
        #modernize-deprecated-headers,
        #modernize-use-auto,
        #modernize-use-nodiscard,
        #modernize-use-trailing-return-type,
        #modernize-use-transparent-functors,
        #readability-qualified-auto,
        #readability-redundant-member-init,
        #readability-uppercase-literal-suffix,